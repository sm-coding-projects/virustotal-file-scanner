version: '3.8'

services:
  webapp:
    build:
      context: .
      dockerfile: docker/Dockerfile.webapp
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/virustotal_scanner
      - SECRET_KEY=${SECRET_KEY}
      - FLASK_ENV=${FLASK_ENV:-production}
      - UPLOAD_FOLDER=/app/uploads
      - MAX_CONTENT_LENGTH=50000000  # 50MB max upload size
      - TZ=UTC
    volumes:
      - uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app_network

  db:
    build:
      context: .
      dockerfile: docker/Dockerfile.db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=virustotal_scanner
      - PGDATA=/var/lib/postgresql/data/pgdata
      - TZ=UTC
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app_network

volumes:
  # Volume for database data - ensures data persistence across container restarts
  db_data:
    driver: local
    driver_opts:
      type: none
      device: ./data/postgres
      o: bind
  
  # Volume for uploaded files - ensures files persist across container restarts
  uploads:
    driver: local
    driver_opts:
      type: none
      device: ./data/uploads
      o: bind

networks:
  app_network:
    driver: bridge